import{_ as t,a as i,b as l,c as r,d as c}from"./VPS_ConfigureStorage.f14e3f98.js";import{_ as d,r as p,o as u,c as h,a as e,b as s,d as o,e as a}from"./app.b292e524.js";const m={},g=a('<h1 id="安裝" tabindex="-1"><a class="header-anchor" href="#安裝" aria-hidden="true">#</a> 安裝</h1><ul><li><a href="#youtube-tutorials">YouTube 教學</a></li><li><a href="#download-a-compiled-binary">下載已編譯執行檔</a></li><li><a href="#building-from-the-source-code">從原始碼建置</a></li><li><a href="#using-docker">使用 Docker 運行</a></li><li><a href="#run-on-android">在 Android 運行</a></li><li><a href="#run-on-a-vps">在虛擬專用伺服器（VPS） 24/7 運作</a></li></ul><h2 id="youtube-教學" tabindex="-1"><a class="header-anchor" href="#youtube-教學" aria-hidden="true">#</a> YouTube 教學</h2><p>如果你不是喜歡閱讀文字的人，我們的社群製作了 YouTube 教學影片。</p>',4),v={href:"https://www.youtube.com/watch?v=BkCqOCa2uQw",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.youtube.com/watch?v=FxJ0KFIHDrY",target:"_blank",rel:"noopener noreferrer"},y=e("h2",{id:"下載已編譯執行檔",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下載已編譯執行檔","aria-hidden":"true"},"#"),s(" 下載已編譯執行檔")],-1),f={href:"https://github.com/MCCTeam/Minecraft-Console-Client/releases",target:"_blank",rel:"noopener noreferrer"},w=e("h2",{id:"從原始碼建置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#從原始碼建置","aria-hidden":"true"},"#"),s(" 從原始碼建置")],-1),_={href:"https://github.com/MCCTeam/Minecraft-Console-Client/releases",target:"_blank",rel:"noopener noreferrer"},D=e("p",null,"However, if you want to build the program from source code, please follow the guide.",-1),k=e("h3",{id:"windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),s(" Windows")],-1),E=e("p",null,"要求：",-1),x={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://dotnet.microsoft.com/en-us/download",target:"_blank",rel:"noopener noreferrer"},T={href:"https://visualstudio.microsoft.com/",target:"_blank",rel:"noopener noreferrer"},S=e("h4",{id:"使用-git-克隆-git-clone",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用-git-克隆-git-clone","aria-hidden":"true"},"#"),s(" 使用 Git 克隆（Git clone）")],-1),M={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},A=e("li",null,"新建一個資料夾用作存放原始碼",-1),P=e("li",null,[s("打開資料夾，按住 "),e("code",null,"SHIFT"),s(" 鍵並在空白地方"),e("code",null,"右鍵")],-1),N=e("li",null,[s("點擊 "),e("code",null,"Git Bash Here")],-1),I={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},L=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">git clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>克隆完成後，你可以關掉 <code>Git Bash</code> 命令列</li><li>打開新克隆的資料夾</li></ol><h4 id="下載翻譯資源-可選" tabindex="-1"><a class="header-anchor" href="#下載翻譯資源-可選" aria-hidden="true">#</a> 下載翻譯資源（可選）</h4>`,3),R={href:"https://crowdin.com/project/minecraft-console-client",target:"_blank",rel:"noopener noreferrer"},O=a("<li>您登入 Crowdin後，方能下載。</li><li>點擊您想要下載的翻譯文件。</li><li>查詢 <code>MinecraftClient</code> -&gt; <code>的資源</code> -&gt; <code>翻譯於</code> -&gt; <code>MCC in-app text</code></li><li>點擊於本行末尾的 <code>•••</code> 。</li><li>點擊 下載和儲存文件到文件夾中<code>/MinecraftClient/Resources/Translations/</code>。</li><li>查詢 <code>MinecraftClient</code> -&gt; <code>的資源中</code> -&gt; <code>ConfigComments</code> -&gt; <code>程式功能的註解都在此文件中</code></li><li>點擊於本行末尾的 <code>•••</code> 。</li><li>點擊 下載和儲存文件到文件夾中 <code>/MinecraftClient/Resources/ConfigComments/</code>.</li><li>查詢 <code>MinecraftClient</code> -&gt; <code>的Resources裡的</code> -&gt; <code>AsciiArt</code> -&gt; <code>ASCII Arts (請用 fixed-width的字元來編輯)</code></li><li>點擊於本行末尾的 <code>•••</code> 。</li><li>點擊下載並儲存文件到文件夾中 <code>/MinecraftClient/Resources/AsciiArt/</code>.</li><li>如果您想下載其他的翻譯語言，可以返回到步驟 3 。</li>",12),V=a(`<h4 id="使用-visual-studio-建置" tabindex="-1"><a class="header-anchor" href="#使用-visual-studio-建置" aria-hidden="true">#</a> 使用 Visual Studio 建置</h4><ol><li>使用 Visual Studio 打開 <code>MinecraftClient.sln</code></li><li>在<code>方案總管（Solution Explorer）</code>中右鍵 <code>MinecraftClient</code> 方案</li><li>點擊<code>屬性（Properties）</code></li><li>打開<code>建置（Build）</code>分頁，選擇 <code>Release</code> 配置</li><li>按 <code>CTRL + S</code> 儲存後關閉分頁</li><li>在<code>方案總管（Solution Explorer）</code>中右鍵 <code>MinecraftClient</code> 方案</li><li>點擊 <code>建置（Build）</code></li></ol><p>如果建置成功，編譯好的 <code>MinecraftClient.exe</code> 執行檔會存放在 <code>MinecraftClient/bin/Release/net6.0/win-x64/publish</code> 資料夾</p><h4 id="手動使用-net-建置" tabindex="-1"><a class="header-anchor" href="#手動使用-net-建置" aria-hidden="true">#</a> 手動使用 .NET 建置</h4><ol><li>打開下載或克隆好的 <code>Minecraft-Console-Client</code> 資料夾</li><li>打開 PowerShell（在空白地方<code>右鍵</code>然後點擊<code>打開 PowerShell</code>；或在檔案總管：<code>檔案 -&gt; 開啟 Windows PowerShell</code>）</li><li>執行以下指令來建置專案：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">dotnet publish MinecraftClient -f net7.0 -r win-x64 --no-self-contained -c Release -p:UseAppHost=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果建置成功，編譯好的 <code>MinecraftClient.exe</code> 執行檔會存放在 <code>MinecraftClient/bin/Release/net6.0/win-x64/publish</code> 資料夾</p><h3 id="linux-macos" tabindex="-1"><a class="header-anchor" href="#linux-macos" aria-hidden="true">#</a> Linux，macOS</h3><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>如果你正在使用 Linux，我們將假設你能夠自行安裝 Git。 如果你不知道如何安裝，為你的 Linux 發行版搜尋教學，這應該很簡單。 （基於 Debian 發行版：<code>apt install git</code>，基於 Arch：<code>pacman -S git</code>）</strong></p></div><p>要求：</p>`,10),H=e("p",null,"Git",-1),G=e("li",null,[e("p",null,"Linux")],-1),U={href:"https://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"},z=e("p",null,".NET SDK 6.0 或更高",-1),W={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux",target:"_blank",rel:"noopener noreferrer"},F={href:"https://docs.microsoft.com/en-us/dotnet/core/install/macos",target:"_blank",rel:"noopener noreferrer"},Y=e("h4",{id:"使用-git-克隆-git-clone-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用-git-克隆-git-clone-1","aria-hidden":"true"},"#"),s(" 使用 Git 克隆（Git clone）")],-1),B=e("li",null,"打開終端機並移動到你將存儲 MCC 的資料夾",-1),q={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},K=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">git clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),$={start:"3"},j=e("li",null,[e("p",null,[s("前往克隆好的資料夾（應該會是 "),e("code",null,"Minecraft-Console-Client"),s("）")])],-1),Q=e("li",null,[e("p",null,[s("如果您想要下載翻譯資源，請點 "),e("a",{href:"#download-translation-resources-optional"},"下載翻譯資源")])],-1),X=e("p",null,"執行以下指令來建置專案：",-1),J=a(`<p>在 Linux：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">dotnet publish MinecraftClient -f net7.0 -r linux-x64 --no-self-contained -c Release -p:UseAppHost=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),Z={class:"custom-container tip"},ee=e("p",{class:"custom-container-title"},"小提示",-1),se={href:"https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids",target:"_blank",rel:"noopener noreferrer"},ne=e("code",null,"-r linux-64",-1),oe=e("code",null,"-r RID_NAME",-1),ae=e("code",null,"-r linux-arm64",-1),te=a(`<p>在 macOS：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">dotnet publish MinecraftClient -f net7.0 -r osx-x64 --no-self-contained -c Release -p:UseAppHost=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),ie={class:"custom-container tip"},le=e("p",{class:"custom-container-title"},"小提示",-1),re={href:"https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#macos-rids",target:"_blank",rel:"noopener noreferrer"},ce=e("code",null,"-r osx-64",-1),de=e("code",null,"-r RID_NAME",-1),pe=e("code",null,"-r osx.12-arm64",-1),ue=a('<p>如果建置成功，編譯好的 <code>MinecraftClient</code> 執行檔會在：</p><ul><li>Linux: <code>MinecraftClient/bin/Release/net7.0/linux-x64/publish/</code></li><li>macOS: <code>MinecraftClient/bin/Release/net7.0/osx-x64/publish/</code></li></ul><h2 id="使用-docker" tabindex="-1"><a class="header-anchor" href="#使用-docker" aria-hidden="true">#</a> 使用 Docker</h2><p>要求：</p><ul><li>Git</li><li>Docker 雲端</li></ul><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>以下部分為進階使用者準備。如果你不知道如何安裝 Git 或 Docker，你可以查看其他章節，或搜尋如何安裝 Docker。</strong></p></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>請留意警告，Docker 目前可以運作，但你必須在交互模式（interactive mode）下啟動容器，否則 MCC 會崩潰。我們正在解決這個問題。</strong></p></div>',7),he={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},me=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">git clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>前往 <code>Minecraft-Console-Client/Docker</code></li><li>使用以下指令建置 Docker 映像（Docker image）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">docker build -t minecraft-console-client:latest </span><span style="color:#DCDCAA;">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>使用 Docker 啟動容器：</strong></p><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>ConsoleInteractive 有一個 BUG 會導致容器在無頭模式（headless mode）啟動時會崩潰，所以你需要使用交互模式（interactive mode）。 不要使用一般方式重啟容器，停止容器後使用交互模式（interactive mode）啟動，然後使用 <code>CTRL + P</code> 和 <code>CTRL + Q</code> 來分離。</strong></p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;"># 如果你不想掛載卷宗（volume），你可以無視 -v 參數。 如果你不掛載卷宗，想編輯 .ini 檔案時將會比較困難</span></span>
<span class="line"><span style="color:#D4D4D4;">docker run -it -v &lt;你想掛載的路徑&gt;:/opt/data minecraft-console-client:latest</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>現在客戶端已經運作，你可以登入。</p><p>要從客戶端分離（detach）但使客戶端繼續在後台運作，按 <code>CTRL + P</code> 然後按 <code>CTRL + Q</code>。</p><p>使用 <code>docker attach</code> 指令來重新連接。</p><p><strong>使用 docker-compose 啟動容器：</strong></p><p>容器卷宗預設將會掛載到與 <code>docker-compose.yml</code> 同一資料夾下的 <code>data</code> 資料夾。</p><p>如果你不想掛載卷宗，你需要註解或刪除整個卷宗部分：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">#volumes:</span></span>
<span class="line"><span style="color:#6A9955;">#- &#39;./data:/opt/data&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>請確保啟動前你在存放 <code>docker-compose.yml</code> 的資料夾中。 如果是，你可以啟動容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">docker-compose run MCC</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>記得使用後移除容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">docker-compose down</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你使用 .ini 檔案並已填入你的資料（使用者名稱，密碼，伺服器），你可以使用以下指令啟動容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">docker-compose up</span></span>
<span class="line"><span style="color:#D4D4D4;">docker-compose up -d </span><span style="color:#6A9955;"># 在後台運作</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>請注意當使用 <code>docker-compose up</code> 時，你將不能與客戶端互動。 如果你希望與客戶端互動，請使用第一個啟動方法：<code>docker-compose run MCC</code>。</p><p>如上所述，你可以使用以下指令停止並刪除容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">docker-compose down</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="在-android-運行" tabindex="-1"><a class="header-anchor" href="#在-android-運行" aria-hidden="true">#</a> 在 Android 運行</h2><p>你可以在 Android 上透過 Termux 和 Ubuntu 22.04 來使用 Minecraft 主控台客戶端，但這需要大量指令來手動設置，請小心不要遺留任何步驟。 依照你的技術水平，網絡速度和 CPU 速度，這可能需要 10 至 20 分鐘時間。</p><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>這部分將會較為技術性，我會盡力使所有東西變得簡單。 如果你遇到困難或問題，請隨意在我們的 GitHub 儲存庫建立新討論串。</strong></p></div>`,25),ge={class:"custom-container tip"},ve=e("p",{class:"custom-container-title"},"小提示",-1),be={href:"https://www.youtube.com/watch?v=SkB-eRCzWIU",target:"_blank",rel:"noopener noreferrer"},ye=a('<div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>為了簡化步驟，這裡我們會使用 root 帳號來安裝所有東西。如果你想建立使用者帳號，請確保你有將之後指令中的 <code>/root</code> 目錄替換為你的 home 目錄。</strong></p></div><h3 id="安裝-1" tabindex="-1"><a class="header-anchor" href="#安裝-1" aria-hidden="true">#</a> 安裝</h3><h4 id="termux-開源終端模擬器" tabindex="-1"><a class="header-anchor" href="#termux-開源終端模擬器" aria-hidden="true">#</a> Termux 開源終端模擬器</h4>',3),fe={class:"custom-container warning"},we=e("p",{class:"custom-container-title"},"注意",-1),_e={href:"https://github.com/termux/termux-app/releases/latest/",target:"_blank",rel:"noopener noreferrer"},De={href:"https://github.com/termux/termux-app/releases/latest/",target:"_blank",rel:"noopener noreferrer"},ke=e("code",null,"debug_universal.apk",-1),Ee=a('<div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>如果你的檔案管理器不允許你執行 APK 檔案，安裝 <code>File Manager +</code> 並在詢問時給予安裝第三方應用程式的權限。</strong></p></div><div class="custom-container danger"><p class="custom-container-title">警告</p><p>**當安裝完 Termux 後，打開它，拉出 Android 通知欄，在 Termux 的通知，往下拉直到你看見以下選項：<code>Exit | Acquire wakelock</code>，點擊 <code>Acquire wakelock</code> 並允許 Termux 取得電量優化豁免權限。 如果你跳過此步驟，你的效能會較差而且 Termux 有可能在後台運作時被 Android 強制終止！</p></div><h4 id="安裝-ubuntu-22-04" tabindex="-1"><a class="header-anchor" href="#安裝-ubuntu-22-04" aria-hidden="true">#</a> 安裝 Ubuntu 22.04</h4><p>在這裡，你有兩個選項：</p>',4),xe=e("li",null,"跟隨這篇文字教學",-1),Ce={href:"https://www.youtube.com/watch?v=5yit2t7smpM",target:"_blank",rel:"noopener noreferrer"},Te=a(`<div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>如果你決定觀看 YouTube 教學影片，觀看至 <code>1:58</code> 就可以，之後的步驟不需要而且可能會令你迷惑。</strong></p></div><p>為了安裝 Ubuntu 22.04 在Termux上，您必須安裝<code>wget</code> and <code>proot</code>, 我們將在下一步展示如何安裝。</p><p>安裝好Termux，請&quot;依序&quot;輸入並執行以下指令，就可以了👍</p><ol><li><code>pkg update</code></li><li><code>pkg upgrade</code></li><li><code>pkg install proot wget</code></li></ol><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>如果程式問你 Y/N 選擇關於 update/upgrade 問題, 輸入Y並執行就對了，因為很多都是程式運作需要的細節。</strong></p></div><p>然後您需要使用以下指令，下載並使用指令集進行安裝。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">wget https://raw.githubusercontent.com/MFDGaming/ubuntu-in-termux/master/ubuntu.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下載完畢後，輸入並執行如下指令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">bash ubuntu.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此時程式又會問你問題, 輸入 <code>Y</code> 跟按下 <code>Enter</code>就對了👍。</p><p>安裝完畢後，輸入並執行以下指令，來啟動您的Ubuntu🥳：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">./startubuntu.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>&#39;當你完全關閉Termux後，想再重新進入Ubuntu時，您就必須每一次都重複輸入剛才的./startubuntu.sh的指令， 您也可以濃縮您ubuntu.sh的名稱，減少您輸入的時間⏳</strong></p></div><h4 id="安裝-net-在-arm-上" tabindex="-1"><a class="header-anchor" href="#安裝-net-在-arm-上" aria-hidden="true">#</a> 安裝 .NET 在 ARM 上</h4><p>由於通過 APT 包管理器存儲庫 來安裝 .NET 6.0 時存在問題，我們將手動進行安裝🙏。</p><p>首先，我們需要更新 APT 包管理器存儲庫並安裝附屬程式。</p><p>更新 APT 資料庫時, 請依序遵照下列指令 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">apt update -y &amp;&amp; apt upgrade -y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完成後，您需要使用以下命令安裝 .NET 的附屬程式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">apt install wget nano unzip libc6 libgcc1 libgssapi-krb5-2 libstdc++6 zlib1g libicu70 libssl3 -y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20),Se={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux-scripted-manual#manual-install",target:"_blank",rel:"noopener noreferrer"},Me=a(`<p>輸入執行 <code>/root</code> 來進到您的主目錄：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> /root</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>首先您必須先下載 .NET 6.0 ，您可以依序遵照下列指令 ：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">wget https://download.visualstudio.microsoft.com/download/pr/901f7928-5479-4d32-a9e5-ba66162ca0e4/d00b935ec4dc79a27f5bde00712ed3d7/dotnet-sdk-6.0.400-linux-arm64.tar.gz</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>本教學是假設您有 64 位版本的 ARM 處理器, 如果您碰巧是 32 位版本，請將上面命令中的鏈接替換為 [this one] (https://download.visualstudio.microsoft.com/download/pr/cf567026-a29a-41aa-bc3a-e4e1ad0df480/0925d411e8e09e31ba7a39a3eb0e29af/aspnetcore-runtime-6.0.8-linux-arm.tar.gz)</strong></p></div>`,5),Ae={class:"custom-container tip"},Pe=e("p",{class:"custom-container-title"},"小提示",-1),Ne={href:"https://dotnet.microsoft.com/en-us/download/dotnet/6.0",target:"_blank",rel:"noopener noreferrer"},Ie=a('<p>Once the file has been downloaded, you need to run the following commands in order:</p><ol><li><p><code>DOTNET_FILE=dotnet-sdk-6.0.400-linux-arm64.tar.gz</code></p><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>If you&#39;re using a different download link, update the file name in this command to match your version.</strong></p></div></li><li><p><code>export DOTNET_ROOT=/root/.dotnet</code></p><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>Here we&#39;re installing .NET in <code>/root</code>, if you&#39;re installing it somewhere else, make sure to set your own path!</strong></p></div></li><li><p><code>mkdir -p &quot;$DOTNET_ROOT&quot; &amp;&amp; tar zxf &quot;$DOTNET_FILE&quot; -C &quot;$DOTNET_ROOT&quot;</code></p></li><li><p><code>export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools</code></p></li></ol><p>Now we need to tell our shell to know where the <code>dotnet</code> command is, for future sessions, since the commands above just tell this current session where the <code>dotnet</code> is located.</p>',3),Le={class:"custom-container warning"},Re=e("p",{class:"custom-container-title"},"注意",-1),Oe={href:"https://www.youtube.com/watch?v=DLeATFgGM-A",target:"_blank",rel:"noopener noreferrer"},Ve=a(`<p>To enable this, we need to edit our <code>/root/.bashrc</code> file with the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">nano /root/.bashrc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Scroll down to the bottom of the file using <code>Page Down</code> (<code>PGDN</code>) button, make a new line and paste the following text:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">export</span><span style="color:#D4D4D4;"> DOTNET_ROOT=/root/.dotnet/</span></span>
<span class="line"><span style="color:#569CD6;">export</span><span style="color:#D4D4D4;"> PATH=</span><span style="color:#9CDCFE;">$PATH</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">$DOTNET_ROOT</span><span style="color:#D4D4D4;">:</span><span style="color:#9CDCFE;">$DOTNET_ROOT</span><span style="color:#D4D4D4;">/tools</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>Here we&#39;re installing .NET in <code>/root</code>, if you&#39;re installing it somewhere else, make sure to set your own path!</strong></p></div><p>Save the file usign the following combination of keys: <code>CTRL + X</code>, type <code>Y</code> and press Enter.</p><p>Veryfy that .NET was installed correctly by running:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">dotnet</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You should get a help page:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">root@localhost:~</span><span style="color:#6A9955;"># dotnet</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Usage: dotnet [options]</span></span>
<span class="line"><span style="color:#D4D4D4;">Usage: dotnet [path-to-application]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">Options:</span></span>
<span class="line"><span style="color:#D4D4D4;">  -h|--help         Display help.</span></span>
<span class="line"><span style="color:#D4D4D4;">  --info            Display .NET information.</span></span>
<span class="line"><span style="color:#D4D4D4;">  --list-sdks       Display the installed SDKs.</span></span>
<span class="line"><span style="color:#D4D4D4;">  --list-runtimes   Display the installed runtimes.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">path-to-application:</span></span>
<span class="line"><span style="color:#D4D4D4;">  The path to an application .dll file to execute.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="installing-mcc" tabindex="-1"><a class="header-anchor" href="#installing-mcc" aria-hidden="true">#</a> Installing MCC</h4><p>Finally, we can install MCC.</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>If you have a 32 ARM processor, you need to build the MCC yourself, take a look at the <a href="#building-from-the-source-code">Building From Source</a> section. Also make sure to be using the appropriate <code>-r</code> parameter value for your architecture.</strong></p></div><p>Let&#39;s make a folder where the MCC will be stored with the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">mkdir MinecraftConsoleClient</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then enter it the newly created folder:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> MinecraftConsoleClient</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Download the MCC with the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">wget https://github.com/MCCTeam/Minecraft-Console-Client/releases/latest/download/MinecraftClient-linux-arm64.zip</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Unzip it with the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">unzip MinecraftClient-linux-arm64.zip</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can remove the zip archive now, we do not need it anymore, with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">rm MinecraftClient-linux-arm64.zip</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>And finally run it with:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">./MinecraftClient</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="after-installation" tabindex="-1"><a class="header-anchor" href="#after-installation" aria-hidden="true">#</a> After installation</h4><p>When you run Termux next time, you need to start Ubuntu with: <code>./startubuntu.sh</code></p><p>Then you can start the MCC again with <code>./MinecraftClient</code></p><p>To stop MCC from running you can press <code>CTRL + C</code></p>`,29),He={href:"https://www.youtube.com/watch?v=DLeATFgGM-A",target:"_blank",rel:"noopener noreferrer"},Ge=e("p",null,[s("For downloading files, you can use the "),e("code",null,"wget"),s(" file we have installed, simply run:")],-1),Ue=e("p",null,[e("code",null,"wget your_link_here"),s(" (you have examples above, and a video tutorial down bellow).")],-1),ze=e("p",null,"Also, here are some linux tutorials for people who are new to it:",-1),We={href:"https://www.youtube.com/watch?v=SkB-eRCzWIU",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://www.youtube.com/watch?v=DLeATFgGM-A",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://www.youtube.com/watch?v=F80Z5qd2b_4",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://www.youtube.com/watch?v=1DF0dTscHHs",target:"_blank",rel:"noopener noreferrer"},qe=e("h2",{id:"run-on-a-vps",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#run-on-a-vps","aria-hidden":"true"},"#"),s(" Run on a VPS")],-1),Ke={class:"custom-container tip"},$e=e("p",{class:"custom-container-title"},"小提示",-1),je={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},Qe=a('<p>The <strong>Minecraft Console Client</strong> can be run on a VPS 24 hours, 7 days a week.</p><ul><li><a href="#what-is-a-vps">What is a VPS?</a></li><li><a href="#prerequisites">Prerequisites</a></li><li><a href="#where-to-get-a-vps">Where to get a VPS</a></li><li><a href="#initial-amazon-vps-setup">Initial Amazon VPS setup</a></li><li><a href="#initial-vps-setup">Initial VPS setup</a></li><li><a href="#creating-a-new-user">Creating a new user account</a></li><li><a href="#installing-net-core-6">Installing .NET Core 6</a></li><li><a href="#installing-mcc-on-a-vps">Installing the Minecraft Console Client</a></li></ul><h3 id="what-is-a-vps" tabindex="-1"><a class="header-anchor" href="#what-is-a-vps" aria-hidden="true">#</a> What is a VPS?</h3><p>VPS stands for a <strong>V</strong>irtual <strong>P</strong>rivate <strong>S</strong>erver, it&#39;s basically a remote virtual PC that is running in the cloud, 24 hours a day, 7 days in week. To be precise, it&#39;s a virtual machine that runs on top of a host operating system (eg. Proxmox).</p><p>You can use a VPS for hosting a website, or a an app, or a game server, or your own VPN, or the Minecraft Console Client.</p>',5),Xe={href:"https://youtu.be/42fwh_1KP_o",target:"_blank",rel:"noopener noreferrer"},Je=e("h3",{id:"prerequisites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),s(" Prerequisites")],-1),Ze=e("p",null,"Gitbash (if you're on Windows)",-1),es={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},ss=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"小提示"),e("p",null,[e("strong",null,"Make sure to allow the installation to add it to the context menu")])],-1),ns=e("li",null,[e("p",null,[e("code",null,"ssh"),s(" and "),e("code",null,"ssh-keygen"),s(" commands (On Windows they're available with Gitbash, on macOs and Linux they should be available by default, it not, search on how to install them)")])],-1),os=e("p",null,"Basic knowledge of Linux shell commands, terminal emulator usage, SSH and Nano editor.",-1),as=e("p",null,"If you already know this, feel free to skip.",-1),ts=e("p",null,"if you get stuck, watch those tutorials.",-1),is=e("p",null,"If you're new to this, you can learn about it here:",-1),ls={href:"https://www.youtube.com/watch?v=JsWQUOEL0N8",target:"_blank",rel:"noopener noreferrer"},rs={href:"https://www.youtube.com/watch?v=SkB-eRCzWIU",target:"_blank",rel:"noopener noreferrer"},cs={href:"https://www.youtube.com/watch?v=DLeATFgGM-A",target:"_blank",rel:"noopener noreferrer"},ds={href:"https://www.youtube.com/watch?v=F80Z5qd2b_4",target:"_blank",rel:"noopener noreferrer"},ps={href:"https://www.youtube.com/watch?v=1DF0dTscHHs",target:"_blank",rel:"noopener noreferrer"},us=a('<h3 id="where-to-get-a-vps" tabindex="-1"><a class="header-anchor" href="#where-to-get-a-vps" aria-hidden="true">#</a> Where to get a VPS</h3><p>You have 2 options:</p><ul><li><a href="#buying-a-vps">Buying a VPS</a></li><li><a href="#aws-ec2-vps">Getting an AWS EC2 VPS for free (12 months free trial)</a></li></ul><h4 id="buying-a-vps" tabindex="-1"><a class="header-anchor" href="#buying-a-vps" aria-hidden="true">#</a> Buying a VPS</h4><p>If you do not want to give your info to Amazon or don&#39;t have a debit card, you can buy your own VPS.</p><p><strong>What hardware requirements I need for running the MCC?</strong></p><p>The MCC is not expensive to run, so it can run on basically any hardware, you do not need to spend a lot of money on a VPS if you are going to run just the MCC, go with the cheapest option.</p><p><strong>Where to buy a VPS?</strong></p><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>In this tutorial we will be using <code>Ubuntu 22.04</code>, make sure to select it as the OS when buying a VPS.</strong></p></div><p>Some of the reliable and cheap hosting providers (sorted for price/performance):</p>',10),hs={href:"https://e-trail.net/vps",target:"_blank",rel:"noopener noreferrer"},ms=e("p",null,[e("strong",null,"Minimum price"),s(": "),e("code",null,"2.50 EUR / month")],-1),gs=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"小提示"),e("p",null,[e("strong",null,"Does not have Ubuntu 22.04 in the dropdown menu when ordering, you will have to re-install later or ask support to do it.")])],-1),vs={href:"https://www.ovhcloud.com/de/vps/",target:"_blank",rel:"noopener noreferrer"},bs=e("p",null,[e("strong",null,"Minimum price"),s(": "),e("code",null,"3.57 EUR / month")],-1),ys={href:"https://www.hetzner.com/cloud",target:"_blank",rel:"noopener noreferrer"},fs=e("p",null,[e("strong",null,"Minimum price"),s(": "),e("code",null,"4.51 EUR / month")],-1),ws={href:"https://www.digitalocean.com/pricing/droplets",target:"_blank",rel:"noopener noreferrer"},_s=e("p",null,[e("strong",null,"Minimum price"),s(": "),e("code",null,"4 EUR / month")],-1),Ds={href:"https://contabo.com/en/vps/",target:"_blank",rel:"noopener noreferrer"},ks=e("p",null,[e("strong",null,"Minimum price"),s(": "),e("code",null,"7 EUR / month")],-1),Es=e("p",null,[e("strong",null,"More serious VPS able to host multiple applications, 4 CPU cores and 8 GB of RAM, 200 GB SSD")],-1),xs=a('<p>You also may want to search for better deals.</p><h4 id="aws-ec2-vps" tabindex="-1"><a class="header-anchor" href="#aws-ec2-vps" aria-hidden="true">#</a> AWS EC2 VPS</h4><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>This will require you to have a valid debit card that can be used on internet and a mobile phone number, as well as giving that info to Amazon corporation.</strong></p></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>Scammers often get AWS VPS and use it to mass login on to stolen Microsoft accounts, some AWS IP addresses might be blocked by Microsoft because of that, if so, you might need to switch regions or to use a Proxy. To debug if your IP has been banned by Microsoft, use the <code>ping &lt;ip&gt;</code> and <code>traceroute &lt;ip&gt;</code> commands.</strong></p></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>Related to the warning above, if you have issues logging with Microsoft and you&#39;re not banned, you may want to check the Security center on your account and approve the login from the VPS, this can be the case for some users.</strong></p></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>If you&#39;re not banned, sometimes fetching the keys can take some time, try giving it a minute or two, if it still hangs, hit some keys to refresh the screen, or try restarting and running again. If it still happens, use tmux instead of screen.</strong></p></div><p>Register on AWS and enter all of your billing info and a phone number.</p><p>Once you&#39;re done, you can continue to <a href="#setting-up-an-aws-vps">Setting up the Amazon VPS</a>.</p><h3 id="initial-amazon-vps-setup" tabindex="-1"><a class="header-anchor" href="#initial-amazon-vps-setup" aria-hidden="true">#</a> Initial Amazon VPS setup</h3><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>Skip this section if you&#39;re not using AWS. Go to <a href="#initial-vps-setup">Initial VPS setup</a></strong></p></div><p>When you register and open the <code>AWS Console</code>, click on the Search field on the top of the page and search for: <code>EC2</code></p><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>Make sure to select the region closest to you for the minimal latency</strong></p></div><p>Click on the <strong>Launch instance</strong> button.</p><p>Fill out the <code>Name</code> field with a name of your preference.</p><p><img src="'+t+'" alt="VPS Name"></p><p>For the <strong>Application and OS images</strong> select <code>Ubuntu Server 22.04 LTS (HVM), SSD Volume Type</code>.</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>Make sure that it has <code>Free tier eligible</code> next to it.</strong></p></div><p><img src="'+i+'" alt="VPS Select OS"></p><p>For the <strong>Instance type</strong> select <code>t2.micro</code>.</p><p>For the <strong>Key pair (login)</strong> click on <strong>Create new key pair</strong> and name it <code>VpsRoot</code>, leave the rest of settings as default and click <strong>Create key pair</strong>, this will generate a RSA private key that will be automatically downloaded.</p><div class="custom-container danger"><p class="custom-container-title">警告</p><p><strong>Make sure that you save this file in a safe place and do not loose it, it&#39;s of an upmost importance since it&#39;s used to access the root/admin account of the VPS. Without it you will not be able to access the root account of the VPS! Also do not let it fall into wrong hands.</strong></p></div><p><img src="'+l+'" alt="VPS Instance Type"></p><p>For the <strong>Network settings</strong> check the following checkboxes on:</p><ul><li><code>Allow SSH traffic from</code> (Anywhere)</li><li><code>Allow HTTPs traffic from the internet</code></li><li><code>Allow HTTP traffic from the internet</code></li></ul><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>The SSH traffic from Anywhere is not the best thing for security, you might want to enter IP addresses of your devices from which you want to access the VPS manually.</strong></p></div><p><img src="'+r+'" alt="VPS Network Settings"></p><p>For the <strong>Storage</strong> enter <code>30</code>.</p><p><img src="'+c+`" alt="VPS Configure Storage"></p><p>Finally, review the <strong>Summary</strong> confirm that everything is as in the tutorial and that you will not be charged and click on the <strong>Launch instance</strong>. Once you&#39;ve clicked on the button, it will take a couple of minutes for the instance to be available up and running.</p><p>Once the instance is up and running, go to it&#39;s details and copy the <code>Public DNS v4 IP</code>.</p><p>You now need to login, go to your folder where you keep the private key you&#39;ve generated and downloaded (make sure you make a new folder for it, do not keep in the downloads folder) and right click on the empty white space (not on files), if you&#39;re on Windows click <strong>Git Bash here</strong>, on mac OS and Linux click on <strong>Open Terminal</strong> (or whatever it is called).</p><p>In order to login with SSH, you are going to use the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh -i &lt;name of your private root key here&gt; ubuntu@&lt;your public dns v4 ip here&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong><code>&lt;</code> and <code>&gt;</code> are not typed, that is just a notation for a placeholder!</strong></p></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong><code>ubuntu</code> is a default root account username for Ubuntu on AWS!</strong></p></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh -i VpsRoot.pem ubuntu@ec2-3-71-108-69.eu-central-1.compute.amazonaws.com</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you&#39;ve provided the right info you should get <code>Welcome to Ubuntu 20.04.5 LTS</code> message.</p><p>Now you can continue to <a href="#creating-a-new-user">Creating a new user</a></p><h3 id="initial-vps-setup" tabindex="-1"><a class="header-anchor" href="#initial-vps-setup" aria-hidden="true">#</a> Initial VPS setup</h3><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>This section if for those who do not use AWS, if you use AWS skip it</strong></p></div><p>When you order the VPS, most likely you will be asked to provide the root account name and password, if it is the case, name the account as <code>root</code> and give it a password of your choice.</p><p>Other option is that you will get your login info in the email once the setup is done.</p>`,43),Cs={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},Ts=e("code",null,"ssh",-1),Ss=a(`<p>If you&#39;re on Windows open <code>Git Bash</code>, on mac OS and Linux open a <code>Terminal</code> and type the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh &lt;username&gt;@&lt;ip&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>If you&#39;re given a custom port other than <code>22</code> by your host, you should add <code>-p &lt;port here&gt;</code> before the username (eg. <code>ssh -p &lt;port here&gt; &lt;username&gt;@&lt;ip&gt;</code>) or <code>:&lt;port&gt;</code> after the ip (eg. <code>ssh &lt;username&gt;@&lt;ip&gt;:&lt;port&gt;</code>)</strong></p></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh root@142.26.73.14</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Example with port:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh -p 2233 root@142.26.73.14</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Once you&#39;ve logged in you should see a Linux prompt and a welcome message if there is one set by your provider.</p><h3 id="creating-a-new-user" tabindex="-1"><a class="header-anchor" href="#creating-a-new-user" aria-hidden="true">#</a> Creating a new user</h3><p>Once you&#39;ve logged in to your VPS you need to create a new user and give it SSH access.</p><p>In this tutorial we will be using <code>mcc</code> as a name for the user account that will be running the MCC.</p><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>You may be wondering why we&#39;re creating a separate user account and making it be accessible over SSH only. This is for security reasons, if you do not want to do this, you&#39;re free to skip it, but be careful.</strong></p></div><p>To create a new user named <code>mcc</code> execute the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo useradd mcc -m</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now we need to give it a password, execute the following command, type the password and confirm it:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo passwd mcc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>When you&#39;re typing a password it will not be displayed on the screen, but you&#39;re typing it for real.</strong></p></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>Make sure you have a strong password!</strong></p></div><p>Now we need to give our user account the admin permissions:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo usermod -aG sudo mcc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now we are going to set it&#39;s shell to bash:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo chsh mcc -s /bin/bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now we need to log in as the <code>mcc</code> user:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">su mcc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Fill in your password when asked.</p><p>Navigate to the <code>mcc</code> user home directory with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> ~</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Make a new <code>.ssh</code> directory:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">mkdir .ssh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Enter it with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> .ssh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Make a new empty file named <code>authorized_keys</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">touch authorized_keys</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Do no close the Git bash/Terminal emulator.</p><p>On your PC, make a new folder where you are going to store your SSH keys that you&#39;re going to use to log in to the user account.</p><p>Open the folder, and right click on the empty white space (not on files), if you&#39;re on Windows click <strong>Git Bash here</strong>, on mac OS and Linux click on <strong>Open Terminal</strong> (or whatever it is called).</p><p>Type the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh-keygen -t RSA -b 4096</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Enter the name of the key file to be: <code>MCC_Key</code>, press Enter.</p><p>When asked for a <code>passphrase</code>, enter a password of your choice and confirm it, make sure it&#39;s strong and that you remember it, best if you write it down on a piece of paper.</p><p>This will generate a private and a public key that you will use to log in to the VPS as a user that you&#39;ve created.</p><p>Now open the <code>MCC_Key.pub</code> file with a text editor of your choice and copy it&#39;s contents to the clipboard.</p><p>Return to the Git Bash/Terminal emulator and execute the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo apt install nano -y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will install the Nano editor on your VPS.</p><p>Now we need to let the SSH service on your VPS know about your newly generated SSH key pair.</p><p>Make sure you are in the <code>/home/mcc/.ssh</code> folder, you can confirm this by executing:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">pwd</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If it does not print <code>/home/mcc/.ssh</code>, navigate to it with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> /home/mcc/.ssh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now you need to open the <code>authorized_keys</code> file with the nano editor:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">nano authorized_keys</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now paste the copied contents of the <code>MCC_Key.pub</code> into the nano editor by right clicking on it.</p><p>Save the file with <code>CTRL + O</code>, press Enter, and then exit it with <code>CTRL + X</code>.</p><p>Now we need to configure the SSHD service to let us login with the SSH key we have generated, for this we need to edit the <code>/etc/ssh/sshd_config</code> file with nano:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo nano /etc/ssh/sshd_config</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Find the <code>#PubkeyAuthentication yes</code> line and remove the <code>#</code> in front to uncomment the line.</p><p>Then find the <code>#AuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2</code> line and remove the <code>#</code> to uncomment the line.</p><p>Additionally for better security you can do the following:</p><ul><li>Set <code>PermitRootLogin</code> to <code>yes</code></li><li>Change the <code>Port</code> to some number of your choice (22-65000) (Make sure it&#39;s at least 2 digits and avoid common ports used by other apps like: 21, 80, 35, 8080, 3000, etc...)</li><li>Uncomment <code>#PasswordAuthentication yes</code> by removing the <code>#</code> in front and set it to <code>yes</code> (This will disable password login, you will be able to login with SSH keys only!)</li></ul><p>Save the file with <code>CTRL + O</code>, hit Enter, close it with <code>CTRL + X</code>.</p><p>Now we need to restart the SSHD service with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo systemctl restart sshd</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Let&#39;s check if everything is working correctly:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo systemctl status sshd</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If everything has been configured as it should be you should see <code>active (running)</code> as a status of the service.</p><p>If not, open the config file again and check for mistakes.</p><p>Press <code>q</code> to exit the log mode.</p><p>Logout from the <code>mcc</code> user with <code>exit</code> command, and then logout from the root <code>ubuntu</code> user by typing <code>exit</code> again.</p><p>Now we can login to the user with our private <code>MCC_Key</code> file.</p><p>Command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh -i &lt;path to the MCC_Key private key&gt; mcc@&lt;ip here&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">ssh -i MCC_Key mcc@3.71.108.69</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>If you&#39;ve changed the <code>Port</code>, make sure you add a <code>-p &lt;your port here&gt;</code> option after the <code>-i &lt;key&gt;</code> option (eg. <code>ssh -i MCC_Key -p 8973 mcc@3.71.108.69</code>)!</strong></p></div><p>If did everything correctly you should see a Linux prompt and a welcome message if there is one on your provider.</p><p>You can do <code>whoami</code> to see your username.</p><p>Now you can install .NET Core 6 and MCC.</p><h3 id="installing-net-core-6" tabindex="-1"><a class="header-anchor" href="#installing-net-core-6" aria-hidden="true">#</a> Installing .NET Core 6</h3><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>If your VPS has an ARM CPU, follow <a href="#installing-net-on-arm">this</a> part of the documentation and then return to section after this one.</strong></p></div>`,80),Ms={class:"custom-container warning"},As=e("p",{class:"custom-container-title"},"注意",-1),Ps=e("code",null,"A fatal error occurred, the folder [/usr/share/dotnet/host/fxr] does not contain any version-numbered child folders",-1),Ns={href:"https://github.com/dotnet/sdk/issues/27082#issuecomment-1211143446",target:"_blank",rel:"noopener noreferrer"},Is=a(`<p>Log in as the user you&#39;ve created.</p><p>Update the system packages and package manager repositories:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo apt update -y &amp;&amp; sudo apt upgrade -y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Install <code>wget</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo apt install wget -y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Go to your home directory with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> ~</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Download the Microsoft repository file:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Add Microsoft repositories to the package manager:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo dpkg -i packages-microsoft-prod.deb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Remove the file, we do not need it anymore:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">rm packages-microsoft-prod.deb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Finally, install .NET Core 6:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo apt-get update -y &amp;&amp; sudo apt-get install -y dotnet-sdk-6.0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Run the following command to check if everything was installed correctly:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">dotnet</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You should get:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">Usage: dotnet [options]</span></span>
<span class="line"><span style="color:#D4D4D4;">Usage: dotnet [path-to-application]</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">Options:</span></span>
<span class="line"><span style="color:#D4D4D4;">  -h|--help         Display help.</span></span>
<span class="line"><span style="color:#D4D4D4;">  --info            Display .NET information.</span></span>
<span class="line"><span style="color:#D4D4D4;">  --list-sdks       Display the installed SDKs.</span></span>
<span class="line"><span style="color:#D4D4D4;">  --list-runtimes   Display the installed runtimes.</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;">path-to-application:</span></span>
<span class="line"><span style="color:#D4D4D4;">  The path to an application .dll file to execute.</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),Ls={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu#2204",target:"_blank",rel:"noopener noreferrer"},Rs=a('<p>If it was successful, you can now install the MCC.</p><h3 id="installing-mcc-on-a-vps" tabindex="-1"><a class="header-anchor" href="#installing-mcc-on-a-vps" aria-hidden="true">#</a> Installing MCC on a VPS</h3><p>Now that you have .NET Core 6.0 and a user account, you should install the <code>screen</code> utility, you will need this in order to keep the MCC running once you close down the SSH session (if you do not have it, the MCC will just stop working once you disconnect). You can look at the <code>screen</code> like a window, except it&#39;s in a terminal, it lets you have multiple &quot;windows&quot; open at the same time.</p><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>There is also a Docker method, if you&#39;re using Docker, you do not need the <code>screen</code> program.</strong></p></div>',4),Os={href:"https://youtu.be/_ZJiEX4rmN4",target:"_blank",rel:"noopener noreferrer"},Vs=a(`<p>To install the <code>screen</code> execute the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">sudo apt install screen -y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now you can install the MCC:</p><ul><li><a href="#download-a-compiled-binary">下載已編譯執行檔</a></li><li><a href="#building-from-the-source-code">從原始碼建置</a></li><li><a href="#using-docker">Run using Docker</a> (Doesn&#39;t require the <code>screen</code> command)</li></ul><p>How to use the <code>screen</code> command?</p>`,5),Hs={class:"custom-container warning"},Gs=e("p",{class:"custom-container-title"},"注意",-1),Us={href:"https://www.youtube.com/watch?v=Yl7NFenTgIo",target:"_blank",rel:"noopener noreferrer"},zs=a(`<p>To start a screen, type:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">screen -S mcc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong><code>mcc</code> here is the name of the screen, you can use whatever you like, but if you&#39;ve used a different name, make sure you use that one instead of the <code>mcc</code> in the following commands.</strong></p></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p><strong>You need to make a screen only once, however if you reboot your VPS, you need to start it on each reboot.</strong></p></div><p>Now you will be in the screen, now you can start the MCC and detach from the screen.</p><p>To detach from the screen press <code>CTRL + A + D</code>.</p><p>To re-attach/return to the screen, execute the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">screen -r mcc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you&#39;ve accidentally closed the SSH session without detaching from the screen it might be still attached, to detach it use:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">screen -d mcc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To list out screens you can use:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">screen -ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To stop the MCC, you can hit <code>CTRL + D</code> (hit it few times).</p>`,13);function Ws(Fs,Ys){const n=p("ExternalLinkIcon");return u(),h("div",null,[g,e("ul",null,[e("li",null,[e("a",v,[s("通過 Daenges 在 Windows 上安裝"),o(n)])]),e("li",null,[e("a",b,[s("在Windows上安裝和掛機等等(Dexter113製作)"),o(n)])])]),y,e("p",null,[s("你可以從 GitHub 下載最新已編譯的執行檔："),e("a",f,[s("下載"),o(n)])]),w,e("p",null,[s("We recommend you to download our precompiled binary file from "),e("a",_,[s("GitHub"),o(n)]),s(".")]),D,k,E,e("ul",null,[e("li",null,[e("a",x,[s("Git"),o(n)])]),e("li",null,[e("a",C,[s(".NET 7.0 or new-er"),o(n)]),s(" or "),e("a",T,[s("Visual Studio"),o(n)]),s(" configured for C# app development")])]),S,e("p",null,[s("安裝 "),e("a",M,[s("Git"),o(n)])]),e("ol",null,[A,P,N,e("li",null,[s("執行以下指令來克隆 "),e("a",I,[s("GitHub 儲存庫"),o(n)]),s("：")])]),L,e("ol",null,[e("li",null,[s("造訪 "),e("a",R,[s(" MCC 在Crowdin上的頁面"),o(n)]),s(".")]),O]),V,e("ul",null,[e("li",null,[H,e("ul",null,[G,e("li",null,[e("p",null,[e("a",U,[s("為 macOS 安裝 .NET"),o(n)])])])])]),e("li",null,[z,e("ul",null,[e("li",null,[e("a",W,[s("為 Linux 安裝 .NET"),o(n)])]),e("li",null,[e("a",F,[s("為 macOS 安裝 .NET"),o(n)])])])])]),Y,e("ol",null,[B,e("li",null,[s("執行以下指令來遞歸地克隆 "),e("a",q,[s("GitHub 儲存庫"),o(n)]),s("：")])]),K,e("ol",$,[j,Q,e("li",null,[X,e("ul",null,[e("li",null,[J,s(),e("div",Z,[ee,e("p",null,[e("strong",null,[s("If you're using Linux that is either ARM, 32-bit, Rhel based, Using Musl, or Tirzen, "),e("a",se,[s("find an appropriate RID"),o(n)]),s(" for your platform and replace the "),ne,s(" with an appropriate "),oe,s(" (Example for arm: "),ae,s(")")])])])]),e("li",null,[te,s(),e("div",ie,[le,e("p",null,[e("strong",null,[s("If you're not using MAC with Intel, find an appropriate RID for your ARM processor, "),e("a",re,[s("find an appropriate RID"),o(n)]),s(" and replace the "),ce,s(" with an appropriate "),de,s(" (Example for arm: "),pe,s(")")])])])])])])]),ue,e("ol",null,[e("li",null,[s("執行以下指令來克隆 "),e("a",he,[s("GitHub 儲存庫"),o(n)]),s("：")])]),me,e("div",ge,[ve,e("p",null,[s("**你必須擁有 Linux 的基本知識，如果完全不認識，觀看"),e("a",be,[s("這個影片（英文無字幕）"),o(n)]),s("來熟悉基本指令。")])]),ye,e("div",fe,[we,e("p",null,[e("strong",null,[s("Play Store 版本的 Termux 已經過時和不支援，請不要使用。請使用 "),e("a",_e,[s("GitHub"),o(n)]),s(" 上的。")])])]),e("p",null,[s("前往 "),e("a",De,[s("Termux GitHub 最新版本"),o(n)]),s("，下載 "),ke,s("，解壓縮並執行。")]),Ee,e("ol",null,[xe,e("li",null,[s("觀看"),e("a",Ce,[s("安裝 Ubuntu 的 YouTube 教學影片"),o(n)])])]),Te,e("p",null,[s("安裝好附屬程式後，是時候安裝 .NET 了，您可以按照我們的步驟或前往 "),e("a",Se,[s("Microsoft one"),o(n)]),s(".")]),Me,e("div",Ae,[Pe,e("p",null,[e("strong",null,[s("This tutorial assumes that you're following along and using Ubuntu 22.04, if you're using a different distro, like Alpine, go to "),e("a",Ne,[s("here"),o(n)]),s(" and copy an appropriate link for your distro.")])])]),Ie,e("div",Le,[Re,e("p",null,[e("strong",null,[s("You will need a basic knowledge of Nano text editor, if you do not know how to use it, watch this "),e("a",Oe,[s("Youtube video tutorial"),o(n)])])])]),Ve,e("p",null,[s("To edit the configuration/settings, you need a text editor, we recommend Nano, as it's very simple to use, if you have followed the installation steps above, you should be familiar with it, if not, check out "),e("a",He,[s("this tutorial"),o(n)]),s(".")]),Ge,Ue,ze,e("ul",null,[e("li",null,[e("a",We,[s("Linux Terminal Introduction by ExplainingComputers"),o(n)])]),e("li",null,[e("a",Fe,[s("Linux Crash Course - nano (command-line text editor) by Learn Linux TV"),o(n)])]),e("li",null,[e("a",Ye,[s("Linux Crash Course - The wget Command by Learn Linux TV"),o(n)])]),e("li",null,[e("a",Be,[s("Linux Basics: How to Untar and Unzip Files (tar, gzip) by webpwnized"),o(n)])])]),qe,e("div",Ke,[$e,e("p",null,[e("strong",null,[s("This is a new section, if you find a mistake, please report it by opening an Issue in our "),e("a",je,[s("Github repository"),o(n)]),s(". Thank you!")])])]),Qe,e("p",null,[s("Here is a "),e("a",Xe,[s("Youtube video"),o(n)]),s(" that explains it in more detail if you're interested.")]),Je,e("ol",null,[e("li",null,[Ze,e("p",null,[s("Download and install "),e("a",es,[s("Gitbash"),o(n)]),s(".")]),ss]),ns,e("li",null,[os,as,ts,is,e("ul",null,[e("li",null,[e("a",ls,[s("What is Linux? by Bennett Bytes"),o(n)])]),e("li",null,[e("a",rs,[s("Linux Terminal Introduction by ExplainingComputers"),o(n)])]),e("li",null,[e("a",cs,[s("Linux Crash Course - nano (command-line text editor) by Learn Linux TV"),o(n)])]),e("li",null,[e("a",ds,[s("Linux Crash Course - The wget Command by Learn Linux TV"),o(n)])]),e("li",null,[e("a",ps,[s("Linux Basics: How to Untar and Unzip Files (tar, gzip) by webpwnized"),o(n)])])])])]),us,e("ul",null,[e("li",null,[e("p",null,[e("a",hs,[s("E-Trail"),o(n)])]),ms,gs]),e("li",null,[e("p",null,[e("a",vs,[s("OVH Cloud"),o(n)])]),bs]),e("li",null,[e("p",null,[e("a",ys,[s("Hetzner Cloud"),o(n)])]),fs]),e("li",null,[e("p",null,[e("a",ws,[s("Digital Ocean"),o(n)])]),_s]),e("li",null,[e("p",null,[e("a",Ds,[s("Contabo"),o(n)])]),ks,Es])]),xs,e("p",null,[s("Once you have the root login account info, you need "),e("a",Cs,[s("Gitbash"),o(n)]),s(" on Windows and "),Ts,s(" if you're on macOS or Linux (if you do not have it by some chance, search on how to install it, it is simple).")]),Ss,e("div",Ms,[As,e("p",null,[e("strong",null,[s("With newer versions of .NET Core 6 on Ubuntu 22.04 you might get the following error: "),Ps,s(", if you get it, use "),e("a",Ns,[s("this solution"),o(n)])])])]),Is,e("p",null,[s("If you do not get this output and the installation was not successful, "),e("a",Ls,[s("try other methods"),o(n)]),s(".")]),Rs,e("p",null,[s("You also can learn about the screen command from "),e("a",Os,[s("this Youtube tutorial"),o(n)]),s(".")]),Vs,e("div",Hs,[Gs,e("p",null,[e("strong",null,[s("If you have issues with Screen command, like output not being properly formatted or program handing/freezing, try using tmux, click "),e("a",Us,[s("here"),o(n)]),s(" to learn how to use it.")])])]),zs])}const Ks=d(m,[["render",Ws],["__file","installation.html.vue"]]);export{Ks as default};
