import{_ as l,o as r,c as d,a as e,b as n,w as c,e as s,d as o,r as i}from"./app.31ee3b43.js";const u={},h=s('<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><ul><li><a href="#youtube-tutorials">YouTube Tutorials</a></li><li><a href="#download-a-compiled-binary">Download a compiled binary</a></li><li><a href="#building-from-the-source-code">Building from the source code</a></li><li><a href="#using-docker">Run using Docker</a></li></ul><h2 id="youtube-tutorials" tabindex="-1"><a class="header-anchor" href="#youtube-tutorials" aria-hidden="true">#</a> YouTube Tutorials</h2><p>If you&#39;re not the kind of person that likes textual tutorials, our community has made video tutorials available on YouTube.</p>',4),p={href:"https://www.youtube.com/watch?v=BkCqOCa2uQw",target:"_blank",rel:"noopener noreferrer"},_=o("Installation on Windows by Daenges"),m={href:"https://www.youtube.com/watch?v=FxJ0KFIHDrY",target:"_blank",rel:"noopener noreferrer"},f=o("Installation on Windows + Auto AFK and More by Dexter113"),g=e("h2",{id:"download-a-compiled-binary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download-a-compiled-binary","aria-hidden":"true"},"#"),o(" Download a compiled binary")],-1),b=o("In order to run "),v=e("strong",null,"Minecraft Console Client",-1),w=o(" you need the "),k={href:"https://dotnet.microsoft.com/en-us/download/dotnet-framework",target:"_blank",rel:"noopener noreferrer"},y=o(".NET Framework 6.0 or new-er"),C=e("blockquote",null,[e("p",null,[e("strong",null,[o("\u26A0\uFE0F IMPORTANT: If you already have .NET, but an older version than "),e("code",null,"6.0"),o(", please update to "),e("code",null,"6.0"),o(" since MCC might not work as expected or at all.")])])],-1),x=e("h4",{id:"how-to-install-net-on-your-platform",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-install-net-on-your-platform","aria-hidden":"true"},"#"),o(" How to install .NET on your platform")],-1),M={href:"https://dotnet.microsoft.com/en-us/download/dotnet-framework",target:"_blank",rel:"noopener noreferrer"},I=o("Install .NET on Windows"),T={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux",target:"_blank",rel:"noopener noreferrer"},R=o("Install .NET on Linux"),N={href:"https://docs.microsoft.com/en-us/dotnet/core/install/macos",target:"_blank",rel:"noopener noreferrer"},O=o("Install .NET on macOS"),E=e("h4",{id:"download",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download","aria-hidden":"true"},"#"),o(" Download")],-1),S=o("You can download a compiled binary file of the latest build from our Releases section on Git Hub: "),D={href:"https://github.com/MCCTeam/Minecraft-Console-Client/releases",target:"_blank",rel:"noopener noreferrer"},L=o("Download"),G=e("h2",{id:"building-from-the-source-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#building-from-the-source-code","aria-hidden":"true"},"#"),o(" Building from the source code")],-1),B=e("h3",{id:"windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),o(" Windows")],-1),A=e("p",null,"Requirements:",-1),H={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},P=o("Git"),q=o(),z=e("em",null,"(Optional: Install only if you want to clone the repository with Git)",-1),F={href:"https://dotnet.microsoft.com/en-us/download",target:"_blank",rel:"noopener noreferrer"},V=o(".NET 6.0 or new-er"),U=o(" or "),Y={href:"https://visualstudio.microsoft.com/",target:"_blank",rel:"noopener noreferrer"},W=o("Visual Studio"),K=o(" configured for C# app development"),Z=e("h4",{id:"downloading-the-source-code-as-a-zip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#downloading-the-source-code-as-a-zip","aria-hidden":"true"},"#"),o(" Downloading the source code as a ZIP")],-1),j=o("Simply download the "),Q={href:"https://github.com/MCCTeam/Minecraft-Console-Client/archive/master.zip",target:"_blank",rel:"noopener noreferrer"},J=o("source code zip archive"),X=o(" and extract it wherever you like."),$=e("h4",{id:"cloning-using-git",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cloning-using-git","aria-hidden":"true"},"#"),o(" Cloning using Git")],-1),ee=e("p",null,"If you do not want to download the ZIP archive.",-1),oe=o("Install "),ne={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},te=o("Git"),se=e("li",null,"Make a new folder where you want to keep the source code",-1),ie=e("li",null,[o("Then open it up, hold "),e("code",null,"SHIFT"),o(" and do a "),e("code",null,"right-click"),o(" on the empty white space in the folder")],-1),ae=e("li",null,[o("Click on "),e("code",null,"Git Bash Here"),o(" in the context menu")],-1),le=o("Clone the "),re={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},de=o("Git Hub Repository"),ce=o(" by typing end executing the following command:"),ue=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>Once the repository has been cloned, you can close the <code>Git Bash</code> terminal emulator</li><li>Open up the new cloned folder</li></ol><h4 id="building-using-the-visual-studio" tabindex="-1"><a class="header-anchor" href="#building-using-the-visual-studio" aria-hidden="true">#</a> Building using the Visual Studio</h4><ol><li>Open up the <code>MinecraftClient.sln</code> via Visual Studio</li><li>Right click on <code>MinecraftClient</code> solution in the <code>Solution Explorer</code></li><li>Click on <code>Properties</code></li><li>Open up the <code>Build</code> tab and select configuration <code>Release</code></li><li>Press <code>CTRL + S</code> and close the file</li><li>Right click on <code>MinecraftClient</code> solution in the <code>Solution Explorer</code></li><li>Click <code>Build</code></li></ol><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release/net6.0/win-x64/publish</code> folder.</p><h4 id="building-using-net-manually-without-visual-studio" tabindex="-1"><a class="header-anchor" href="#building-using-net-manually-without-visual-studio" aria-hidden="true">#</a> Building using .NET manually without Visual Studio</h4><ol><li>Open the <code>Minecraft-Console-Client</code> folder you&#39;ve cloned or downloaded</li><li>Open the PowerShell (<code>Right-Click</code> on the whitespace and click <code>Open PowerShell</code>, or in Windows Explorer: <code>File -&gt; Open PowerShell</code>)</li><li>Run the following command to build the project:</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet publish MinecraftClient -f net6.0 -r win-x64 --no-self-contained -c Release -p:UseAppHost<span class="token operator">=</span>true -p:IncludeNativeLibrariesForSelfExtract<span class="token operator">=</span>true -p:DebugType<span class="token operator">=</span>None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release/net6.0/win-x64/publish</code> folder.</p><h3 id="linux-macos" tabindex="-1"><a class="header-anchor" href="#linux-macos" aria-hidden="true">#</a> Linux, macOS</h3><p>Requirements:</p>`,11),he=e("p",null,[o("Git "),e("em",null,"(Optional: Install only if you want to clone the repository with Git)")],-1),pe=e("li",null,[e("p",null,"Linux:"),e("blockquote",null,[e("p",null,[e("strong",null,[o("\u2139\uFE0F NOTE: If you're using Linux we will assume that you should be able to install git on your own. If you don't know how, search it up for your distribution, it should be easy. (Debian based distros: "),e("code",null,"apt install git"),o(", Arch based: "),e("code",null,"pacman -S git"),o(")")])])])],-1),_e={href:"https://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"},me=o("Install Git on macOS"),fe=e("p",null,".NET SDK 6.0 or new-er",-1),ge={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux",target:"_blank",rel:"noopener noreferrer"},be=o("Install .NET on Linux"),ve={href:"https://docs.microsoft.com/en-us/dotnet/core/install/macos",target:"_blank",rel:"noopener noreferrer"},we=o("Install .NET on macOS"),ke=e("h4",{id:"downloading-the-source-code-as-a-zip-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#downloading-the-source-code-as-a-zip-1","aria-hidden":"true"},"#"),o(" Downloading the source code as a ZIP")],-1),ye=o("Simply download the "),Ce={href:"https://github.com/MCCTeam/Minecraft-Console-Client/archive/master.zip",target:"_blank",rel:"noopener noreferrer"},xe=o("source code zip archive"),Me=o(" and extract it wherever you like."),Ie=e("h4",{id:"cloning-using-git-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cloning-using-git-1","aria-hidden":"true"},"#"),o(" Cloning using Git")],-1),Te=e("li",null,"Open up a terminal emulator and navigate to the folder where you will store the MCC",-1),Re=o("Recursively clone the "),Ne={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},Oe=o("Git Hub Repository"),Ee=o(" by typing end executing the following command:"),Se=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),De={start:"3"},Le=e("li",null,[e("p",null,[o("Go to the folder you've cloned (should be "),e("code",null,"Minecraft-Console-Client"),o(")")])],-1),Ge=e("p",null,"Run the following command to build the project:",-1),Be=s(`<p>On Linux:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet publish MinecraftClient -f net6.0 -r linux-x64 --no-self-contained -c Release -p:UseAppHost<span class="token operator">=</span>true -p:IncludeNativeLibrariesForSelfExtract<span class="token operator">=</span>true -p:DebugType<span class="token operator">=</span>None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),Ae=o("\u2139\uFE0F NOTE: If you're using Linux that is either ARM, 32-bit, Rhel based, Using Musl, or Tirzen, "),He={href:"https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids",target:"_blank",rel:"noopener noreferrer"},Pe=o("find an appropriate RID"),qe=o(" for your platform and replace the "),ze=e("code",null,"'-r linux-64",-1),Fe=o(" with an appropriate "),Ve=e("code",null,"-r <your RID>",-1),Ue=o(" (Example for arm: "),Ye=e("code",null,"-r linux-arm64",-1),We=o(")"),Ke=s(`<p>On macOS:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet publish MinecraftClient -f net6.0 -r osx-x64 --no-self-contained -c Release -p:UseAppHost<span class="token operator">=</span>true -p:IncludeNativeLibrariesForSelfExtract<span class="token operator">=</span>true -p:DebugType<span class="token operator">=</span>None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),Ze=o("\u2139\uFE0F NOTE: If you're not using MAC with Intel, find an appropriate RID for your ARM processor, "),je={href:"https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#macos-rids",target:"_blank",rel:"noopener noreferrer"},Qe=o("find an appropriate RID"),Je=o(" and replace the "),Xe=e("code",null,"'-r osx-64",-1),$e=o(" with an appropriate "),eo=e("code",null,"-r <your RID>",-1),oo=o(" (Example for arm: "),no=e("code",null,"-r osx.12-arm64",-1),to=o(")"),so=s('<p>If the build has succeeded, the compiled binary <code>MinecraftClient</code> will be in:</p><ul><li>Linux: <code>MinecraftClient/bin/Release/net6.0/linux-x64/publish/</code></li><li>macOS: <code>MinecraftClient/bin/Release/net6.0/osx-x64/publish/</code></li></ul><h2 id="using-docker" tabindex="-1"><a class="header-anchor" href="#using-docker" aria-hidden="true">#</a> Using Docker</h2><p>Requirements:</p><ul><li>Git</li><li>Docker</li></ul><blockquote><p><strong>\u2139\uFE0F NOTE: This section is for more advanced users, if you do not know how to install git or docker, you can take a look at other sections for Git, and search on how to install Docker on your system.</strong></p></blockquote>',6),io=o("\u26A0\uFE0F IMPORTANT: Docker currently does not work, more info "),ao=o("here"),lo=o("Clone the "),ro={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},co=o("Git Hub Repository"),uo=o(" by typing end executing the following command:"),ho=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Navigate to <code>Minecraft-Console-Client/Docker</code></li><li>Build the image using the following command</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> build -t minecraft-console-client:latest <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Start the container using Docker:</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># You could also ignore the -v parameter if you dont want to mount the volume that is up to you. If you don&#39;t it&#39;s harder to edit the .ini file if thats something you want to do</span>
<span class="token function">docker</span> run -it -v <span class="token operator">&lt;</span>PATH_ON_YOUR_MACHINE_TO_MOUNT<span class="token operator">&gt;</span>:/opt/data minecraft-console-client:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now you could login and the Client is running. To detach from the Client but still keep it running in the Background press: <code>CTRL + P</code>, <code>CTRL + Q</code>. To reattach use the <code>docker attach</code> command.</p><p><strong>Start the container using docker-compose:</strong></p><p>By default, the volume of the container gets mapped into a new folder named <code>data</code> in the same folder the <code>docker-compose.yml</code> is stored.</p><p>If you don&#39;t want to map a volume, you have to comment out or delete the entire volumes section:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#volumes:</span>
<span class="token comment">#- &#39;./data:/opt/data&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Make sure you are in the directory the <code>docker-compose.yml</code> is stored before you attempt to start. If you do so, you can start the container:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> run MCC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Remember to remove the container after usage:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you use the INI file and entered your data (username, password, server) there, you can start your container using</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> up
<span class="token function">docker-compose</span> up -d <span class="token comment">#for deamonized running in the background</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that you won&#39;t be able to interact with the client using <code>docker-compose up</code>. If you want that functionality, please use the first method: <code>docker-compose run MCC</code>. As above, you can stop and remove the container using</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18);function po(_o,mo){const t=i("ExternalLinkIcon"),a=i("RouterLink");return r(),d("div",null,[h,e("ul",null,[e("li",null,[e("a",p,[_,n(t)])]),e("li",null,[e("a",m,[f,n(t)])])]),g,e("p",null,[b,v,w,e("a",k,[y,n(t)])]),C,x,e("ul",null,[e("li",null,[e("a",M,[I,n(t)])]),e("li",null,[e("a",T,[R,n(t)])]),e("li",null,[e("a",N,[O,n(t)])])]),E,e("p",null,[S,e("a",D,[L,n(t)])]),G,B,A,e("ul",null,[e("li",null,[e("a",H,[P,n(t)]),q,z]),e("li",null,[e("a",F,[V,n(t)]),U,e("a",Y,[W,n(t)]),K])]),Z,e("p",null,[j,e("a",Q,[J,n(t)]),X]),$,ee,e("p",null,[oe,e("a",ne,[te,n(t)])]),e("ol",null,[se,ie,ae,e("li",null,[le,e("a",re,[de,n(t)]),ce])]),ue,e("ul",null,[e("li",null,[he,e("ul",null,[pe,e("li",null,[e("p",null,[e("a",_e,[me,n(t)])])])])]),e("li",null,[fe,e("ul",null,[e("li",null,[e("a",ge,[be,n(t)])]),e("li",null,[e("a",ve,[we,n(t)])])])])]),ke,e("p",null,[ye,e("a",Ce,[xe,n(t)]),Me]),Ie,e("ol",null,[Te,e("li",null,[Re,e("a",Ne,[Oe,n(t)]),Ee])]),Se,e("ol",De,[Le,e("li",null,[Ge,e("ul",null,[e("li",null,[Be,e("blockquote",null,[e("p",null,[e("strong",null,[Ae,e("a",He,[Pe,n(t)]),qe,ze,Fe,Ve,Ue,Ye,We])])])]),e("li",null,[Ke,e("blockquote",null,[e("p",null,[e("strong",null,[Ze,e("a",je,[Qe,n(t)]),Je,Xe,$e,eo,oo,no,to])])])])])])]),so,e("blockquote",null,[e("p",null,[e("strong",null,[io,n(a,{to:"/guide/#notes-on-some-features"},{default:c(()=>[ao]),_:1})])])]),e("ol",null,[e("li",null,[lo,e("a",ro,[co,n(t)]),uo])]),ho])}var go=l(u,[["render",po],["__file","installation.html.vue"]]);export{go as default};
