import{_ as s,o as a,c as l,a as e,b as t,e as i,d as o,r}from"./app.8d28bc62.js";const d={},c=i('<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><ul><li><a href="#youtube-tutorials">YouTube Tutorials</a></li><li><a href="#download-a-compiled-binary">Download a compiled binary</a></li><li><a href="#building-from-the-source-code">Building from the source code</a></li><li><a href="#using-docker">Run using Docker</a></li></ul><h2 id="youtube-tutorials" tabindex="-1"><a class="header-anchor" href="#youtube-tutorials" aria-hidden="true">#</a> YouTube Tutorials</h2><p>If you&#39;re not the kind of person that likes textual tutorials, our community has made video tutorials available on YouTube.</p>',4),u={href:"https://www.youtube.com/watch?v=BkCqOCa2uQw",target:"_blank",rel:"noopener noreferrer"},h=o("Installation on Windows by Daenges"),p={href:"https://www.youtube.com/watch?v=FxJ0KFIHDrY",target:"_blank",rel:"noopener noreferrer"},m=o("Installation on Windows + Auto AFK and More by Dexter113"),_=e("h2",{id:"download-a-compiled-binary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download-a-compiled-binary","aria-hidden":"true"},"#"),o(" Download a compiled binary")],-1),b=o("In order to run "),g=e("strong",null,"Minecraft Console Client",-1),f=o(" you need the "),v={href:"https://dotnet.microsoft.com/en-us/download/dotnet-framework",target:"_blank",rel:"noopener noreferrer"},w=o(".NET Framework 6.0 or new-er"),k=e("h4",{id:"how-to-install-net-on-your-platform",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-install-net-on-your-platform","aria-hidden":"true"},"#"),o(" How to install .NET on your platform")],-1),y={href:"https://dotnet.microsoft.com/en-us/download/dotnet-framework",target:"_blank",rel:"noopener noreferrer"},C=o("Install .NET on Windows"),x={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux",target:"_blank",rel:"noopener noreferrer"},M=o("Install .NET on Linux"),T={href:"https://docs.microsoft.com/en-us/dotnet/core/install/macos",target:"_blank",rel:"noopener noreferrer"},I=o("Install .NET on macOS"),N=e("h4",{id:"download",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download","aria-hidden":"true"},"#"),o(" Download")],-1),R=o("You can download a compiled binary file of the latest build from our Releases section on Git Hub: "),O={href:"https://github.com/MCCTeam/Minecraft-Console-Client/releases",target:"_blank",rel:"noopener noreferrer"},S=o("Download"),E=e("h2",{id:"building-from-the-source-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#building-from-the-source-code","aria-hidden":"true"},"#"),o(" Building from the source code")],-1),D=e("h3",{id:"windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),o(" Windows")],-1),G=e("p",null,"Requirements:",-1),B={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},L=o("Git"),H=o(),P=e("em",null,"(Optional: Install only if you want to clone the repository with Git)",-1),z={href:"https://dotnet.microsoft.com/en-us/download",target:"_blank",rel:"noopener noreferrer"},F=o(".NET 6.0 or new-er"),A=o(" or "),V={href:"https://visualstudio.microsoft.com/",target:"_blank",rel:"noopener noreferrer"},q=o("Visual Studio"),Y=o(" configured for C# app development"),U=e("h4",{id:"downloading-the-source-code-as-a-zip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#downloading-the-source-code-as-a-zip","aria-hidden":"true"},"#"),o(" Downloading the source code as a ZIP")],-1),W=o("Simply download the "),K={href:"https://github.com/MCCTeam/Minecraft-Console-Client/archive/master.zip",target:"_blank",rel:"noopener noreferrer"},Z=o("source code zip archive"),j=o(" and extract it wherever you like."),Q=e("h4",{id:"cloning-using-git",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cloning-using-git","aria-hidden":"true"},"#"),o(" Cloning using Git")],-1),J=e("p",null,"If you do not want to download the ZIP archive.",-1),X=o("Install "),$={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},ee=o("Git"),oe=e("li",null,"Make a new folder where you want to keep the source code",-1),ne=e("li",null,[o("Then open it up, hold "),e("code",null,"SHIFT"),o(" and do a "),e("code",null,"right-click"),o(" on the empty white space in the folder")],-1),te=e("li",null,[o("Click on "),e("code",null,"Git Bash Here"),o(" in the context menu")],-1),ie=o("Clone the "),se={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},ae=o("Git Hub Repository"),le=o(" by typing end executing the following command:"),re=i(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>Once the repository has been cloned, you can close the <code>Git Bash</code> terminal emulator</li><li>Open up the new cloned folder</li></ol><h4 id="building-using-the-visual-studio" tabindex="-1"><a class="header-anchor" href="#building-using-the-visual-studio" aria-hidden="true">#</a> Building using the Visual Studio</h4><ol><li>Open up the <code>MinecraftClient.sln</code> via Visual Studio</li><li>Right click on <code>MinecraftClient</code> solution in the <code>Solution Explorer</code></li><li>Click on <code>Properties</code></li><li>Open up the <code>Build</code> tab and select configuration <code>Release</code></li><li>Press <code>CTRL + S</code> and close the file</li><li>Right click on <code>MinecraftClient</code> solution in the <code>Solution Explorer</code></li><li>Click <code>Build</code></li></ol><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release/net6.0/win-x64/publish</code> folder.</p><h4 id="building-using-net-manually-without-visual-studio" tabindex="-1"><a class="header-anchor" href="#building-using-net-manually-without-visual-studio" aria-hidden="true">#</a> Building using .NET manually without Visual Studio</h4><ol><li>Open the <code>Minecraft-Console-Client</code> folder you&#39;ve cloned or downloaded</li><li>Open the PowerShell (<code>Right-Click</code> on the whitespace and click <code>Open PowerShell</code>, or in Windows Explorer: <code>File -&gt; Open PowerShell</code>)</li><li>Run the following command to build the project:</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet publish MinecraftClient -f net6.0 -r win-x64 --no-self-contained -c Release -p:UseAppHost<span class="token operator">=</span>true -p:IncludeNativeLibrariesForSelfExtract<span class="token operator">=</span>true -p:DebugType<span class="token operator">=</span>None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release/net6.0/win-x64/publish</code> folder.</p><h3 id="linux-macos" tabindex="-1"><a class="header-anchor" href="#linux-macos" aria-hidden="true">#</a> Linux, macOS</h3><p>Requirements:</p>`,11),de=e("p",null,[o("Git "),e("em",null,"(Optional: Install only if you want to clone the repository with Git)")],-1),ce=e("li",null,[e("p",null,"Linux:"),e("blockquote",null,[e("p",null,[e("strong",null,"\u2139\uFE0F NOTE: If you're using Linux I'll assume that you should be able to install git on your own. If you don't know how, search it up for your distribution, it should be easy")])])],-1),ue={href:"https://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"},he=o("Install Git on macOS"),pe=e("p",null,".NET SDK 6.0 or new-er",-1),me={href:"https://docs.microsoft.com/en-us/dotnet/core/install/linux",target:"_blank",rel:"noopener noreferrer"},_e=o("Install .NET on Linux"),be={href:"https://docs.microsoft.com/en-us/dotnet/core/install/macos",target:"_blank",rel:"noopener noreferrer"},ge=o("Install .NET on macOS"),fe=e("h4",{id:"downloading-the-source-code-as-a-zip-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#downloading-the-source-code-as-a-zip-1","aria-hidden":"true"},"#"),o(" Downloading the source code as a ZIP")],-1),ve=o("Simply download the "),we={href:"https://github.com/MCCTeam/Minecraft-Console-Client/archive/master.zip",target:"_blank",rel:"noopener noreferrer"},ke=o("source code zip archive"),ye=o(" and extract it wherever you like."),Ce=e("h4",{id:"cloning-using-git-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#cloning-using-git-1","aria-hidden":"true"},"#"),o(" Cloning using Git")],-1),xe=e("li",null,"Open up a terminal emulator and navigate to the folder where you will store the MCC",-1),Me=o("Recursively clone the "),Te={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},Ie=o("Git Hub Repository"),Ne=o(" by typing end executing the following command:"),Re=i(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li><p>Go to the folder you&#39;ve cloned (should be <code>Minecraft-Console-Client</code>)</p></li><li><p>Run the following command to build the project:</p><ul><li><p>On Linux:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet publish MinecraftClient -f net6.0 -r linux-x64 --no-self-contained -c Release -p:UseAppHost<span class="token operator">=</span>true -p:IncludeNativeLibrariesForSelfExtract<span class="token operator">=</span>true -p:DebugType<span class="token operator">=</span>None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>On macOS:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>dotnet publish MinecraftClient -f net6.0 -r osx-x64 --no-self-contained -c Release -p:UseAppHost<span class="token operator">=</span>true -p:IncludeNativeLibrariesForSelfExtract<span class="token operator">=</span>true -p:DebugType<span class="token operator">=</span>None
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ol><p>If the build has succeeded, the compiled binary <code>MinecraftClient</code> will be in:</p><ul><li>Linux: <code>MinecraftClient\\bin\\Release\\net6.0\\linux-x64\\publish\\</code></li><li>macOS: <code>MinecraftClient\\bin\\Release\\net6.0\\osx-x64\\publish\\</code></li></ul><h2 id="using-docker" tabindex="-1"><a class="header-anchor" href="#using-docker" aria-hidden="true">#</a> Using Docker</h2><p>Requirements:</p><ul><li>Git</li><li>Docker</li></ul><blockquote><p><strong>\u2139\uFE0F NOTE: This section is for more advanced users, if you do not know how to install git or docker, you can take a look at other sections for Git, and search on how to install Docker on your system.</strong></p></blockquote>`,8),Oe=o("Clone the "),Se={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},Ee=o("Git Hub Repository"),De=o(" by typing end executing the following command:"),Ge=i(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git --recursive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Navigate to <code>Minecraft-Console-Client/Docker</code></li><li>Build the image using the following command</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> build -t minecraft-console-client:latest <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Start the container using Docker:</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># You could also ignore the -v parameter if you dont want to mount the volume that is up to you. If you don&#39;t it&#39;s harder to edit the .ini file if thats something you want to do</span>
<span class="token function">docker</span> run -it -v <span class="token operator">&lt;</span>PATH_ON_YOUR_MACHINE_TO_MOUNT<span class="token operator">&gt;</span>:/opt/data minecraft-console-client:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now you could login and the Client is running. To detach from the Client but still keep it running in the Background press: <code>CTRL + P</code>, <code>CTRL + Q</code>. To reattach use the <code>docker attach</code> command.</p><p><strong>Start the container using docker-compose:</strong></p><p>By default, the volume of the container gets mapped into a new folder named <code>data</code> in the same folder the <code>docker-compose.yml</code> is stored.</p><p>If you don&#39;t want to map a volume, you have to comment out or delete the entire volumes section:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#volumes:</span>
<span class="token comment">#- &#39;./data:/opt/data&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Make sure you are in the directory the <code>docker-compose.yml</code> is stored before you attempt to start. If you do so, you can start the container:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> run MCC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Remember to remove the container after usage:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you use the INI file and entered your data (username, password, server) there, you can start your container using</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> up
<span class="token function">docker-compose</span> up -d <span class="token comment">#for deamonized running in the background</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that you won&#39;t be able to interact with the client using <code>docker-compose up</code>. If you want that functionality, please use the first method: <code>docker-compose run MCC</code>. As above, you can stop and remove the container using</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18);function Be(Le,He){const n=r("ExternalLinkIcon");return a(),l("div",null,[c,e("ul",null,[e("li",null,[e("a",u,[h,t(n)])]),e("li",null,[e("a",p,[m,t(n)])])]),_,e("p",null,[b,g,f,e("a",v,[w,t(n)])]),k,e("ul",null,[e("li",null,[e("a",y,[C,t(n)])]),e("li",null,[e("a",x,[M,t(n)])]),e("li",null,[e("a",T,[I,t(n)])])]),N,e("p",null,[R,e("a",O,[S,t(n)])]),E,D,G,e("ul",null,[e("li",null,[e("a",B,[L,t(n)]),H,P]),e("li",null,[e("a",z,[F,t(n)]),A,e("a",V,[q,t(n)]),Y])]),U,e("p",null,[W,e("a",K,[Z,t(n)]),j]),Q,J,e("p",null,[X,e("a",$,[ee,t(n)])]),e("ol",null,[oe,ne,te,e("li",null,[ie,e("a",se,[ae,t(n)]),le])]),re,e("ul",null,[e("li",null,[de,e("ul",null,[ce,e("li",null,[e("p",null,[e("a",ue,[he,t(n)])])])])]),e("li",null,[pe,e("ul",null,[e("li",null,[e("a",me,[_e,t(n)])]),e("li",null,[e("a",be,[ge,t(n)])])])])]),fe,e("p",null,[ve,e("a",we,[ke,t(n)]),ye]),Ce,e("ol",null,[xe,e("li",null,[Me,e("a",Te,[Ie,t(n)]),Ne])]),Re,e("ol",null,[e("li",null,[Oe,e("a",Se,[Ee,t(n)]),De])]),Ge])}var ze=s(d,[["render",Be],["__file","installation.html.vue"]]);export{ze as default};
