import{_ as a,o as i,c as l,a as e,b as t,e as s,d as o,r}from"./app.f066076e.js";const d={},c=s('<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><ul><li><a href="#youtube-tutorials">You Tube Tutorials</a></li><li><a href="#download-a-compiled-binary">Download a compiled binary</a></li><li><a href="#building-from-the-source-code">Building from source</a></li><li><a href="#using-docker">Run using Docker</a></li></ul><h2 id="you-tube-tutorials" tabindex="-1"><a class="header-anchor" href="#you-tube-tutorials" aria-hidden="true">#</a> You Tube Tutorials</h2><p>If you&#39;re not the kind of person that likes textual tutorials, our community has made video tutorials available on You Tube.</p>',4),u={href:"https://www.youtube.com/watch?v=BkCqOCa2uQw",target:"_blank",rel:"noopener noreferrer"},h=o("Installation on Windows by Daenges"),p={href:"https://www.youtube.com/watch?v=FxJ0KFIHDrY",target:"_blank",rel:"noopener noreferrer"},m=o("Installation on Windows + Auto AFK and More by Dexter113"),_=e("h2",{id:"download-a-compiled-binary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download-a-compiled-binary","aria-hidden":"true"},"#"),o(" Download a compiled binary")],-1),f=e("h4",{id:"windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),o(" Windows")],-1),b=e("p",null,[o("In order to run "),e("strong",null,"Minecraft Console Client"),o(" on Windows you need the following software:")],-1),g={href:"https://dotnet.microsoft.com/en-us/download/dotnet-framework",target:"_blank",rel:"noopener noreferrer"},w=o(".NET Framework 4.8 or new-er"),v=e("h4",{id:"linux-mac-os-unix",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#linux-mac-os-unix","aria-hidden":"true"},"#"),o(" Linux, Mac OS, Unix")],-1),k=o("In order to run "),y=e("strong",null,"Minecraft Console Client",-1),C=o(" on other platforms you need the "),x={href:"https://www.mono-project.com",target:"_blank",rel:"noopener noreferrer"},M=e("strong",null,"Mono",-1),T=o(" framework:"),I={href:"https://www.mono-project.com/download/stable/#download-lin",target:"_blank",rel:"noopener noreferrer"},R=o("Linux Build"),O={href:"https://www.mono-project.com/download/stable/#download-mac",target:"_blank",rel:"noopener noreferrer"},S=o("MacOS Build"),B={href:"https://www.mono-project.com/docs/about-mono/supported-platforms/",target:"_blank",rel:"noopener noreferrer"},N=o("Other Platforms"),D=e("h4",{id:"download",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download","aria-hidden":"true"},"#"),o(" Download")],-1),E=o("You can download a compiled binary file of the latest build from our Releases section on Git Hub: "),G={href:"https://github.com/MCCTeam/Minecraft-Console-Client/releases",target:"_blank",rel:"noopener noreferrer"},q=o("Download"),j=e("h2",{id:"building-from-the-source-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#building-from-the-source-code","aria-hidden":"true"},"#"),o(" Building from the source code")],-1),L=e("h3",{id:"windows-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-1","aria-hidden":"true"},"#"),o(" Windows")],-1),V=e("p",null,"Requirements:",-1),H={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},F=o("Git"),X={href:"https://dotnet.microsoft.com/en-us/download",target:"_blank",rel:"noopener noreferrer"},Y=o(".NET 6.0 or new-er"),P=o(" or "),U={href:"https://visualstudio.microsoft.com/",target:"_blank",rel:"noopener noreferrer"},W=o("Visual Studio"),A=o(" configured for C# app development"),K=o("Install "),Q={href:"https://www.git-scm.com/",target:"_blank",rel:"noopener noreferrer"},$=o("Git"),z=o(" and "),J={href:"https://visualstudio.microsoft.com/",target:"_blank",rel:"noopener noreferrer"},Z=o("Visual Studio"),ee=o(" or "),oe={href:"https://dotnet.microsoft.com/en-us/download",target:"_blank",rel:"noopener noreferrer"},ne=o(".NET 6.0 or new-er"),te=e("li",null,"Make a new folder where you want to keep the source code",-1),se=e("li",null,[o("Then open it up, hold "),e("code",null,"SHIFT"),o(" and do a "),e("code",null,"right-click"),o(" on the empty white space in the folder")],-1),ae=e("li",null,[o("Click on "),e("code",null,"Git Bash Here"),o(" in the context menu")],-1),ie=o("Clone the "),le={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},re=o("Git Hub Repository"),de=o(" by typing end executing the following command:"),ce=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>Once the repository has been cloned, you can close the <code>Git Bash</code> terminal emulator</li><li>Open up the new cloned folder</li></ol><h4 id="visual-studio" tabindex="-1"><a class="header-anchor" href="#visual-studio" aria-hidden="true">#</a> Visual Studio</h4><ol><li>Open up the <code>MinecraftClient.sln</code> via Visual Studio</li><li>Right click on <code>MinecraftClient</code> solution in the <code>Solution Explorer</code></li><li>Click on <code>Properties</code></li><li>Open up the <code>Build</code> tab and select configuration <code>Release</code></li><li>Press <code>CTRL + S</code> and close the file</li><li>Right click on <code>MinecraftClient</code> solution in the <code>Solution Explorer</code></li><li>Click <code>Build</code></li></ol><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release</code> folder.</p><h4 id="net-manually-without-visual-studio" tabindex="-1"><a class="header-anchor" href="#net-manually-without-visual-studio" aria-hidden="true">#</a> .NET manually without Visual Studio</h4><ol><li>Open the <code>MinecraftClient</code> folder</li><li>Open the <code>MinecraftClient.csproj</code> in a text editor of your choice</li><li>Find the following line</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Configuration</span> Condition<span class="token operator">=</span><span class="token string">&quot; &#39;$(Configuration)&#39; == &#39;&#39; &quot;</span><span class="token operator">&gt;</span>Debug<span class="token operator">&lt;</span><span class="token operator">/</span>Configuration<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>Replace <code>Debug</code> with <code>Release</code> so it will be:</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">Configuration</span> Condition<span class="token operator">=</span><span class="token string">&quot; &#39;$(Configuration)&#39; == &#39;&#39; &quot;</span><span class="token operator">&gt;</span>Release<span class="token operator">&lt;</span><span class="token operator">/</span>Configuration<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>Save and close the file</li><li>Locate <code>MSBuild.exe</code> for .NET inside <code>C:\\Windows\\Microsoft.NET\\Framework\\vX.X.XXXXX</code></li><li>Drag and drop <code>MinecraftClient.csproj</code> over <code>MSBuild.exe</code> to launch the build</li></ol><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release</code> folder.</p><h3 id="linux-mac-os-unix-1" tabindex="-1"><a class="header-anchor" href="#linux-mac-os-unix-1" aria-hidden="true">#</a> Linux, Mac OS, Unix</h3><blockquote><p><strong>\u2139\uFE0F NOTE: Since you&#39;re most likely using Linux, Unix or MacOS, I&#39;ll assume that you should be able to install git on your own. If you don&#39;t search it up for your platofrm, it should be easy</strong></p></blockquote><p>Requirements:</p>`,15),ue=e("li",null,"Git",-1),he=o("Mono "),pe={href:"https://www.mono-project.com/download/stable/#download-lin",target:"_blank",rel:"noopener noreferrer"},me=o("Linux Build"),_e={href:"https://www.mono-project.com/download/stable/#download-mac",target:"_blank",rel:"noopener noreferrer"},fe=o("MacOS Build"),be={href:"https://www.mono-project.com/docs/about-mono/supported-platforms/",target:"_blank",rel:"noopener noreferrer"},ge=o("Other Platforms"),we=e("li",null,"Verify that Mono is installed and can run correctly by following steps on their website",-1),ve=e("li",null,"Open up a terminal and navigate to the folder where you will store the MCC",-1),ke=o("Clone the "),ye={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},Ce=o("Git Hub Repository"),xe=o(" by typing end executing the following command:"),Me=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>Go to the folder you&#39;ve cloned</li><li>Go to <code>MinecraftClient</code></li><li>Run the following command: <code>msbuild MinecraftClient.csproj</code> to build the project</li></ol><p>If the build has succeeded, the compiled binary <code>MinecraftClient.exe</code> will be in <code>MinecraftClient/bin/Release</code> folder.</p><h2 id="using-docker" tabindex="-1"><a class="header-anchor" href="#using-docker" aria-hidden="true">#</a> Using Docker</h2><p>Requirements:</p><ul><li>Git</li><li>Docker</li></ul><blockquote><p><strong>\u2139\uFE0F NOTE: This section is for more advanced users, if you do not know how to install git or docker, you can take a look at other sections for Git, and search on how to install Docker on your system.</strong></p></blockquote>`,7),Te=o("Clone the "),Ie={href:"https://github.com/MCCTeam/Minecraft-Console-Client",target:"_blank",rel:"noopener noreferrer"},Re=o("Git Hub Repository"),Oe=o(" by typing end executing the following command:"),Se=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/MCCTeam/Minecraft-Console-Client.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>Navigate to <code>Minecraft-Console-Client/Docker</code></li><li>Build the image using the following command</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> build -t minecraft-console-client:latest <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Start the container using Docker:</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># You could also ignore the -v parameter if you dont want to mount the volume that is up to you. If you don&#39;t it&#39;s harder to edit the .ini file if thats something you want to do</span>
<span class="token function">docker</span> run -it -v <span class="token operator">&lt;</span>PATH_ON_YOUR_MACHINE_TO_MOUNT<span class="token operator">&gt;</span>:/opt/data minecraft-console-client:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now you could login and the Client is running. To detach from the Client but still keep it running in the Background press: <code>CTRL + P</code>, <code>CTRL + Q</code>. To reattach use the <code>docker attach</code> command.</p><p><strong>Start the container using docker-compose:</strong></p><p>By default, the volume of the container gets mapped into a new folder named <code>data</code> in the same folder the <code>docker-compose.yml</code> is stored.</p><p>If you don&#39;t want to map a volume, you have to comment out or delete the entire volumes section:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment">#volumes:</span>
<span class="token comment">#- &#39;./data:/opt/data&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Make sure you are in the directory the <code>docker-compose.yml</code> is stored before you attempt to start. If you do so, you can start the container:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> run MCC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Remember to remove the container after usage:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you use the INI file and entered your data (username, password, server) there, you can start your container using</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> up
<span class="token function">docker-compose</span> up -d <span class="token comment">#for deamonized running in the background</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that you won&#39;t be able to interact with the client using <code>docker-compose up</code>. If you want that functionality, please use the first method: <code>docker-compose run MCC</code>. As above, you can stop and remove the container using</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18);function Be(Ne,De){const n=r("ExternalLinkIcon");return i(),l("div",null,[c,e("ul",null,[e("li",null,[e("a",u,[h,t(n)])]),e("li",null,[e("a",p,[m,t(n)])])]),_,f,b,e("ul",null,[e("li",null,[e("a",g,[w,t(n)])])]),v,e("p",null,[k,y,C,e("a",x,[M,t(n)]),T]),e("ul",null,[e("li",null,[e("a",I,[R,t(n)])]),e("li",null,[e("a",O,[S,t(n)])]),e("li",null,[e("a",B,[N,t(n)])])]),D,e("p",null,[E,e("a",G,[q,t(n)])]),j,L,V,e("ul",null,[e("li",null,[e("a",H,[F,t(n)])]),e("li",null,[e("a",X,[Y,t(n)]),P,e("a",U,[W,t(n)]),A])]),e("p",null,[K,e("a",Q,[$,t(n)]),z,e("a",J,[Z,t(n)]),ee,e("a",oe,[ne,t(n)])]),e("ol",null,[te,se,ae,e("li",null,[ie,e("a",le,[re,t(n)]),de])]),ce,e("ul",null,[ue,e("li",null,[he,e("ul",null,[e("li",null,[e("a",pe,[me,t(n)])]),e("li",null,[e("a",_e,[fe,t(n)])]),e("li",null,[e("a",be,[ge,t(n)])])])])]),e("ol",null,[we,ve,e("li",null,[ke,e("a",ye,[Ce,t(n)]),xe])]),Me,e("ol",null,[e("li",null,[Te,e("a",Ie,[Re,t(n)]),Oe])]),Se])}var Ge=a(d,[["render",Be],["__file","installation.html.vue"]]);export{Ge as default};
